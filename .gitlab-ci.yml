image: node:10

variables:
  GIT_STRATEGY: fetch
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  POSTGRES_DB: dataopener
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: ""
  POSTGRES_HOST: postgres
  CI_GITLAB_REGISTRY: "${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHORT_SHA}"
  CI_WORKDIR: /usr/src/app

include:
  - template: Code-Quality.gitlab-ci.yml

stages:
  - package
  - test
  - release
  - deploy

docker:
  stage: package
  image: docker:latest
  services:
    - docker:19.03.4-dind
  script:
    - docker login -u gitlab-ci-token -p "${CI_BUILD_TOKEN}" "${CI_REGISTRY}"
    - docker build -t "${CI_PROJECT_NAME}" .
    - docker tag "${CI_PROJECT_NAME}" "${CI_GITLAB_REGISTRY}"
    - docker push "${CI_GITLAB_REGISTRY}"

.test:
  image: $CI_GITLAB_REGISTRY
  variables:
    GIT_STRATEGY: none
  services:
    - postgres:9.6
  before_script:
    - cd "${CI_WORKDIR}"

code_style:
  stage: test
  extends: .test
  script:
    - yarn test-eslint

unit_test:
  stage: test
  extends: .test
  script:
    - yarn test

.gcloud:
  image: google/cloud-sdk
  variables:
    CI_GCLOUD_REGISTRY: "asia.gcr.io/${GCLOUD_PROJECT_ID}/${CI_PROJECT_NAME}:${CI_COMMIT_SHORT_SHA}"
    BUILD_ID: $(git describe)-$(date +%y%m%d%H%M)
  before_script:
    - echo "${GCLOUD_SERVICE_KEY}" | base64 -d > ${HOME}/gcloud-service-key.json
    - gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
    - gcloud --quiet config set project ${GCLOUD_PROJECT_ID}
    - gcloud --quiet container clusters get-credentials --region ${GCLOUD_COMPUTE_REGION} ${GCLOUD_CLUSTER_NAME}
  only:
    - master
    - tags

release:
  stage: release
  extends: .gcloud
  services:
    - docker:19.03.4-dind
  script:
    - docker login -u gitlab-ci-token -p "${CI_BUILD_TOKEN}" "${CI_REGISTRY}"
    - docker pull "${CI_GITLAB_REGISTRY}"
    - gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://asia.gcr.io
    - docker tag "${CI_GITLAB_REGISTRY}" "${CI_GCLOUD_REGISTRY}"
    - docker push "${CI_GCLOUD_REGISTRY}"

deploy_stage:
  stage: deploy
  extends: .gcloud
  image: devth/helm
  script:
    - 'sed -r "s/(version: )[0-9\.]+-dev/\1-${CI_COMMIT_TAG:=BUILD_ID}/" -i ./k8s/Chart.yaml'
    - helm init --service-account tiller --wait --upgrade
    - helm upgrade
      --install
      --set image.repository="${CI_GCLOUD_REGISTRY}"
      --force
      --wait
      "${CI_PROJECT_NAME}-stage"
      ./k8s

deploy_production:
  stage: deploy
  extends: .gcloud
  image: devth/helm
  script:
    - 'sed -r "s/(version: )[0-9\.]+-dev/\1-${CI_COMMIT_TAG:=BUILD_ID}/" -i ./k8s/Chart.yaml'
    - helm init --service-account tiller --wait --upgrade
    - helm upgrade
      --install
      --set image.repository="${CI_GCLOUD_REGISTRY}"
      --force
      --wait
      "${CI_PROJECT_NAME}-production"
      ./k8s
  when: manual
